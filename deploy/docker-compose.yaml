version: "3"

services:  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: elasticsearch-servico-notas
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks: 
        - servico-notas
   
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    container_name: kibana-servico-notas
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks: 
        - servico-notas
        
  postgres:
    image: postgres
    container_name: postgres-servico-notas
    volumes:
      - /c/Users/Vinicius/Documents/database:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - servico-notas
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: torneSe
      POSTGRES_DB: TorneSeDb
  
  mongo:
    image: mongo:latest
    container_name: mongo-servico-notas
    volumes:
      - ./database_mongo:/data/db
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - servico-notas
   
  worker-servico-notas:
    image: tornese/servico-notas:latest
    build: ../ .
    container_name: servico-notas
    networks:
      - servico-notas
    env_file:
      - ../worker.env
    depends_on:
      - mongo
      - postgres
      - kibana
      - elasticsearch

networks:
  servico-notas:
    driver: bridge
    name: servico-notas